abline(a=0, b=0, col = "blue")
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98, 206)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98, 206)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,   206)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98, 206)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98, 187)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98, 197)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98, 206)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
top10.grp = cut(college$Top.10, c(0, 50, 80, 100))
accept.grp = cut(college$Accept.rate, c(0, 25, 50, 100))
P = prop.table(table(top10.grp, accept.grp), margin=2)
barplot(P, ylim=c(0, 1.7), ylab="Proportion", xlab="Acceptance Rate Groups",
legend.text=dimnames(P)$top10.grp,  col = rainbow(3),
args.legend = c(title="'Top Student' Percentage"))
top10.grp = cut(college$Top.10, c(0, 50, 80, 100))
accept.grp = cut(college$Accept.rate, c(0, 25, 50, 100))
P = prop.table(table(top10.grp, accept.grp), margin=2)
barplot(P, ylim=c(0, 1.7), ylab="Proportion", xlab="Acceptance Rate Groups",
legend.text=dimnames(P)$top10.grp,  col = rainbow(3),
args.legend = c(title="'Top Student' Percentage"))
hist(college$Full.time,
xlab="Full Time Percentages",
main="Percentages of Full-Time Faculty at Schools")
hist(college$Full.time,
xlab="Full Time Percentages",
main="Percentages of Full-Time Faculty at Schools")
froot = sqrt(college$Full.time/100) - sqrt(1 - college$Full.time/100)
hist(froot, main="Histogram of Folded Sqrt")
flog = log10(college$Full.time) - log10(100 - college$Full.time)
hist(flog, main="Histogram of Folded Log")
roots = sqrt(college$Alumni.giving)
logs = log(college$Alumni.giving)
par(mfrow=c(1,2))
hist(logs)
hist(roots)
par(mfrow=c(1,2))
qqnorm(logs, pch = 1, frame = FALSE, main="Q-Q Plot of Logs")
qqline(logs, col = "steelblue", lwd = 2)
qqnorm(roots, pch = 1, frame = FALSE, main="Q-Q Plot of Roots")
qqline(roots, col = "steelblue", lwd = 2)
par(mfrow=c(1,2))
qqnorm(logs, pch = 1, frame = FALSE, main="Q-Q Plot of Logs")
qqline(logs, col = "steelblue", lwd = 2)
qqnorm(roots, pch = 1, frame = FALSE, main="Q-Q Plot of Roots")
qqline(roots, col = "steelblue", lwd = 2)
stripchart(Alumni.giving ~ Tier,  method="stack",
pch=19, xlab="Alumni Giving Percentage",
ylab="Tier", data=college)
stripchart(Alumni.giving ~ Tier,  method="stack",
pch=19, xlab="Alumni Giving Percentage",
ylab="Tier", data=college)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# disabled for knitting because it requires input from user each time.
#fast_food = scan(what="character")
fast_food = c("Wendys",    "Wendys",    "Subway",    "McDonalds", "Subway",
"Subway",    "Subway",    "Wendys",    "Subway",    "Wendys",
"Subway", "Subway", "Subway", "Subway", "Subway"   )
table(fast_food)
round(table(fast_food)/length(fast_food), 2)
prop = table(fast_food) / length(fast_food)
prop = prop %>% as.data.frame()
labels = round((prop$Freq) *100, 1) %>% as.character() %>% paste0("%")
prop %>%
ggplot(aes(x=fast_food, y=Freq, fill=fast_food)) + geom_bar(stat="identity") +
geom_text(aes(label=labels), alpha=0.8, nudge_y = +0.02) +
ggtitle("Fast Food Restaurant Preferences Among 15 Students") +
ylab("Proportion of Students") +
xlab("")
prop %>%
ggplot(aes(x="", y=Freq, fill=fast_food)) + geom_bar(stat="identity") +
ggtitle("Fast Food Preferences (15 students)") +
ylab("") +  theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab("") + coord_polar("y", start=0) +
geom_text(y=c(0.97, 0.5, 0.14), aes(label = labels), color = "white", size=3)
Pujols.70.games = data.frame(Number.of.hits = c("0", "1", "2", "3+") %>% as.factor(),
Observed = c(17, 31, 17, 5))
Pujols.70.games
hits = 0:4
p = dbinom(hits, size=4, prob=0.312)
probs= c(p[1:3], 1-sum(p[1:3]))
chisq.test(Pujols.70.games$Observed, p=probs)
Pujols.25.games = data.frame(Number.of.hits = c("0", "1", "2", "3+") %>% as.factor(),
Observed = c(5, 5, 4, 11))
Pujols.25.games
hits = 0:5
p = dbinom(hits, size=5, prob=0.312)
probs= c(p[1:3], 1-sum(p[1:3]))
chisq.test(Pujols.25.games$Observed, p=probs)
data.frame(Number.of.hits = c("0", "1", "2", "3+"), Expected=probs * 25)
#25 is the  number of games
chisq.test(Pujols.25.games$Observed, p=probs, simulate.p.value = TRUE)
twins = read.csv("~/Google Drive/UCSC/Coursework/204/albert_rizzo_data/twins.txt")
twins = na.omit(twins)
# need the max and min
summary(twins$AGE)
twins$AGE_Category = cut(twins$AGE, breaks = c(18, 30, 40, 50, 80))
age.category = twins$AGE_Category
table(age.category)
table(age.category) / length(twins$AGE)
prop = table(age.category) / length(twins$AGE)
prop = prop %>% as.data.frame()
labels = round((prop$Freq) *100, 1) %>% as.character() %>% paste0("%")
prop %>%
ggplot(aes(x=age.category, y=Freq, fill=age.category)) + geom_bar(stat="identity") +
geom_text(aes(label=labels), alpha=0.8, nudge_y = +0.02) +
ggtitle("Age of Twins in Ashenfelter and Kruege Twin Study") +
ylab("Proportion") +
xlab("Age Category")
n=length(prop$Freq)
sd(prop$Freq)* ((n-1)/n)
mean(prop$Freq)
# used to count how many have the value "."
# sum(twins$HRWAGEL==".")
twins = twins %>% mutate(HRWAGEL = ifelse(HRWAGEL==".", "0.01", HRWAGEL) %>% as.numeric() %>% round(2)) %>%
mutate(ifelse(HRWAGEL==0, 0.01, HRWAGEL))
wage.category = cut(twins$HRWAGEL, c(0, 7, 13, 20, 150))
age.wage.tbl = table(wage.category, age.category)
age.wage.tbl
prop.table(age.wage.tbl, margin=2)
P = prop.table(age.wage.tbl, margin=2)
barplot(P, ylim=c(0, 1.7), ylab="PROPORTION", xlab="Age Group",
legend.text=dimnames(P)$wage.category, args.legend = c(title="Wage Group"),
col = rainbow(4))
age.wage.chisq = chisq.test(age.category, wage.category)
age.wage.chisq
age.wage.chisq$expected
age.wage.chisq$residuals
age.wage.chisq$residuals %>% as.data.frame() %>%
ggplot(aes(x=1:16, y=abs(Freq))) +
geom_point(aes(shape=wage.category), size=2) + xlab("k=0:15") + ylab("Residual (absolute value)") +
geom_hline(yintercept = 0, alpha=0.5) +
geom_hline(yintercept = 2, linetype="dashed", color="blue") + theme_minimal()
mosaicplot(age.wage.tbl, shade = TRUE, main="")
fake.age.cat = rep(c("(18,30]",  "(30,40]",  "(40,50]",  "(50,80]"), 4)
fake.wage.cat = c(rep("(0, 7]", 4),  rep("(7, 13]", 4), rep("(13, 20]", 4),  rep("(20, 150]", 4))
fake.wage.cat = fake.wage.cat %>% factor(levels = c("(0, 7]", "(7, 13]", "(13, 20]", "(20, 150]"))
mosaicplot(table(fake.wage.cat, fake.age.cat), main="", ylab="age", xlab="wage", shade=TRUE)
age.wage.tbl
pidigits = read.table("http://www.itl.nist.gov/div898/strd/univ/data/PiDigits.dat",
skip=60)
table(pidigits)
barplot(table(pidigits), ylab="Frequencies", xlab="Digit",
main= "Frequencies of Digit in Pi", col="gray90")
chisq.test(table(pidigits))
college = read.delim("~/Google Drive/UCSC/Coursework/204/albert_rizzo_data/college.txt")
#delete the 6 rows with NA (saves time)
college = college[complete.cases(college$Pct.20, college$Pct.50), ]
plot(college$Pct.20, college$Pct.50,
main="Percentage of Small vs Large Classes",
xlab="%age of Small Classes",
ylab="%age of Large Classes")
rline = line(college$Pct.20, college$Pct.50)
plot(college$Pct.20, college$Pct.50,
main="Percentage of Small vs Large Classes",
xlab="Percentage of Small Classes",
ylab="Percentage of Large Classes")
abline(rline, col = "blue")
rline$coefficients
x_i = 60
intercept = rline$coefficients[1]
slope = rline$coefficients[2]
prediction = slope*x_i + intercept
prediction
par(mfrow=c(1,2))
plot(college$Pct.20, rline$residuals, cex =0.6, ylab="Residuals", xlab="Percentage of Small Classes")
abline(a=0, b=0, col = "blue")
plot(college$Pct.50, rline$residuals, cex =0.6, ylab="Residuals", xlab="Percentage of Large Classes")
abline(a=0, b=0, col = "blue")
#plot(college$Pct.20, rline$residuals,  cex =0.6, ylab="Residuals", xlab="Percentage of Small Classes")
#abline(a=0, b=0, col = "grey")
#abline(a=10, b=0, col = "blue")
#abline(a=-10, b=0, col = "blue")
#identify(college$Pct.20, rline$residuals, n=8, labels=college$School, cex=0.7)
college = college[complete.cases(college$Top.10, college$Accept.rate), ]
plot(college$Accept.rate, college$Top.10, xlab="Acceptance Rate", ylab="Percent of incoming students in top 10%")
rline = line(college$Accept.rate, college$Top.10)
lm = lm(college$Accept.rate ~ college$Top.10)
abline(rline, col = "blue")
abline(lm, col = "red")
#identify(college$Accept.rate, college$Top.10, n=9, labels=college$School, cex=0.7)
index = c(41, 43, 45, 50, 58, 73,  80,  98)
text(x= college$Accept.rate[index], y=college$Top.10[index]-5, labels=college$School[index],
srt=-20, cex=0.6)
rline
par(mfrow=c(2,1))
plot(college$Top.10, rline$residuals, ylab="Residuals", xlab="Percent of incoming students in top 10%", ylim = c(-80, 100))
abline(a=40, b=0, col = "blue")
abline(a=-40, b=0, col = "blue")
ytick = seq(-100, 100, by=25)
axis(side=2, at=ytick, labels = TRUE)
#identify(college$Top.10, rline$residuals, n=9, labels=college$School, cex=0.7)
pos_index=  c(41, 45, 98) #43,  44,
neg_index = c(197, 206)
text(x=college$Top.10[73], y=rline$residuals[73]-10,
labels=college$School[73], srt=-20, cex=0.6)
text(x= college$Top.10[pos_index], y=rline$residuals[pos_index]+10,
labels=college$School[pos_index], srt=-20, cex=0.6)
text(x= college$Top.10[neg_index]+1, y=rline$residuals[neg_index]-7,
labels=college$School[neg_index], srt=-20, cex=0.6)
plot(college$Accept.rate, rline$residuals, ylab="Residuals", xlab="Acceptance Rate", ylim = c(-80, 100))
abline(a=40, b=0, col = "blue")
abline(a=-40, b=0, col = "blue")
ytick = seq(-100, 100, by=25)
axis(side=2, at=ytick, labels = TRUE)
text(x=college$Accept.rate[73], y=rline$residuals[73]-10,
labels=college$School[73], srt=-20, cex=0.6)
text(x= college$Accept.rate[pos_index], y=rline$residuals[pos_index]+10,
labels=college$School[pos_index], srt=-20, cex=0.6)
text(x= college$Accept.rate[neg_index]+1, y=rline$residuals[neg_index]-10,
labels=college$School[neg_index], srt=-30, cex=0.6)
top10.grp = cut(college$Top.10, c(0, 50, 80, 100))
accept.grp = cut(college$Accept.rate, c(0, 25, 50, 100))
P = prop.table(table(top10.grp, accept.grp), margin=2)
barplot(P, ylim=c(0, 1.7), ylab="Proportion", xlab="Acceptance Rate Groups",
legend.text=dimnames(P)$top10.grp,  col = rainbow(3),
args.legend = c(title="'Top Student' Percentage"))
hist(college$Full.time,
xlab="Full Time Percentages",
main="Percentages of Full-Time Faculty at Schools")
college$Full.time %>% summary()
froot = sqrt(college$Full.time/100) - sqrt(1 - college$Full.time/100)
hist(froot, main="Histogram of Folded Sqrt")
flog = log10(college$Full.time) - log10(100 - college$Full.time)
hist(flog, main="Histogram of Folded Log")
quantile(flog, c(0.16, 0.84))
# no need for unbiased estimator
std_deviation = sd(flog[!is.infinite(flog)]) * sqrt((n-1)/n)
avg = mean(flog[!is.infinite(flog)])
c(avg - std_deviation,
avg + std_deviation)
college = college[complete.cases(college$Alumni.giving), ]
stripchart(college$Alumni.giving, method="stack", pch=19, xlab="Alumni Giving Percentage")
stripchart(college$Alumni.giving, method="stack", pch=19, xlab="Alumni Giving Percentage")
index = which(college$Alumni.giving>45)
text(x= college$Alumni.giving[index], y=1.2, labels=college$School[index], srt=-45, cex=0.6)
roots = sqrt(college$Alumni.giving)
logs = log(college$Alumni.giving)
par(mfrow=c(1,2))
hist(logs)
hist(roots)
par(mfrow=c(1,2))
qqnorm(logs, pch = 1, frame = FALSE, main="Q-Q Plot of Logs")
qqline(logs, col = "steelblue", lwd = 2)
qqnorm(roots, pch = 1, frame = FALSE, main="Q-Q Plot of Roots")
qqline(roots, col = "steelblue", lwd = 2)
stripchart(college$Alumni.giving, method="stack", pch=19, xlab="Alumni Giving Percentage")
stripchart(college$Alumni.giving, method="stack", pch=19, xlab="Alumni Giving Percentage")
index = which(college$Alumni.giving>45)
text(x= college$Alumni.giving[index], y=1.2, labels=college$School[index], srt=-45, cex=0.6)
stripchart(college$Alumni.giving, method="stack", pch=19, xlab="Alumni Giving Percentage")
index = which(college$Alumni.giving>45)
text(x= college$Alumni.giving[index], y=1.2, labels=college$School[index], srt=-45, cex=0.6)
stripchart(college$Alumni.giving, method="stack", pch=19, xlab="Alumni Giving Percentage")
index = which(college$Alumni.giving>45)
text(x= college$Alumni.giving[index], y=1.2, labels=college$School[index], srt=-45, cex=0.6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data = read.csv("angry_moods.csv")
table(data$Athlete, data$Sex)
data = read.csv("angry_moods.csv")
setwd("~/Google Drive/UCSC/Coursework/204/proposal")
data = read.csv("angry_moods.csv")
table(data$Athlete, data$Sex)
table(Athlete, data$Sex)
Athlete = data$Athlete
Sex = data$Sex
table(Athlete, Sex)
setwd("~/Google Drive/UCSC/Coursework/204/proposal")
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
Athlete = data$Athlete
Sex = data$Sex
table(Athlete, Sex)
setwd("~/Google Drive/UCSC/Coursework/204/proposal")
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
setwd("~/Google Drive/UCSC/Coursework/204/presentation")
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
data %>% head
library(tidyverse)
setwd("~/Google Drive/UCSC/Coursework/204/presentation")
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
data %>% head()
library(tidyverse)
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
setwd("~/coding/stat204_project/proposal_presentation")
data %>% head() %>% as.data.frame()
library(tidyverse)
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
data %>% head() %>% as.data.frame()
Sex=data$Sex
Athlete = data$Athlete
table(Sex, Athlete)
par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
boxplot(AE ~ Sex, data = data)
library(tidyverse)
# library(gridExtra)
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
data %>% head() %>% as.data.frame()
data$Sex <- factor(data$Sex)
data$Athlete <- factor(data$Athlete)
names(data)[3:7] <- c("AO", "AI", "CO", "CI", "AE")
data$Factors <- factor(
paste(as.character(data$Sex), as.character(data$Athlete), sep = "_"))
levels(data$Factors) <- c("F_N", "F_A", "M_N", "M_A")
Sex <- data$Sex
Athlete <- data$Athlete
table(Sex, Athlete)
par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
boxplot(AE ~ Sex, data = data)
boxplot(AE ~ Athlete, data = data)
boxplot(AE ~ Factors, data = data)
# boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
# boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
# boxplot3 <- ggplot(data, aes(y = AE, fill = Factors)) + geom_boxplot()
# grid.arrange(boxplot1, boxplot2, boxplot3)
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
boxplot1
boxplot2
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
grid.arrange(boxplot1, boxplot2)
?ggarange
?ggarrange
install.packages("ggpubr")
library(ggpubr)
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
ggarrange(boxplot1, boxplot2, #bp + rremove("x.text"),
# labels = c("A", "B", "C"),
ncol = 1, nrow = 2)
library(ggpubr)
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot() + coord_flip()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot() + coord_flip()
ggarrange(boxplot1, boxplot2, #bp + rremove("x.text"),
# labels = c("A", "B", "C"),
ncol = 1, nrow = 2)
library(ggpubr)
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
ggarrange(boxplot1, boxplot2, #bp + rremove("x.text"),
# labels = c("A", "B", "C"),
ncol = 1, nrow = 2)
data %>% ggplot(aes(y = AE, fill = Factors)) + geom_boxplot()
library(tidyverse)
# library(gridExtra)
data = read.csv("angry_moods.csv") %>%
mutate(Sex = ifelse(Sex==2, 0, 1)) %>%
mutate(Athlete = ifelse(Athlete==2, 0, 1))
data %>% head() %>% as.data.frame()
data$Sex <- factor(data$Sex)
data$Athlete <- factor(data$Athlete)
names(data)[3:7] <- c("AO", "AI", "CO", "CI", "AE")
data$Factors <- factor(
paste(as.character(data$Sex), as.character(data$Athlete), sep = "_"))
levels(data$Factors) <- c("F_N", "F_A", "M_N", "M_A")
Sex <- data$Sex
Athlete <- data$Athlete
table(Sex, Athlete)
library(ggpubr)
#par(mfrow = c(1, 3))
levels(data$Sex) <- c("female", "male")
levels(data$Athlete) <- c("Non-athlete", "Athlete")
# boxplot(AE ~ Sex, data = data)
# boxplot(AE ~ Athlete, data = data)
# boxplot(AE ~ Factors, data = data)
boxplot1 <- ggplot(data, aes(y = AE, fill = Sex)) + geom_boxplot()
boxplot2 <- ggplot(data, aes(y = AE, fill = Athlete)) + geom_boxplot()
ggarrange(boxplot1, boxplot2, #bp + rremove("x.text"),
# labels = c("A", "B", "C"),
ncol = 1, nrow = 2)
